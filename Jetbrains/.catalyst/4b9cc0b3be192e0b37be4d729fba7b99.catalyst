{"title":{"en":"C. Suffix Structures","ru":"C. Про суффиксные структуры"},"contestId":"352746","problemIndex":"C","timeLimit":{"en":"1 second","ru":"1 секунда"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>Bizon the Champion isn't just a bison. He also is a favorite of the \"Bizons\" team.</p><p>At a competition the \"Bizons\" got the following problem: \"You are given two distinct words (strings of English letters), <span class=\"tex-span\"><i>s</i></span> and <span class=\"tex-span\"><i>t</i></span>. You need to transform word <span class=\"tex-span\"><i>s</i></span> into word <span class=\"tex-span\"><i>t</i></span>\". The task looked simple to the guys because they know the suffix data structures well. Bizon Senior loves suffix automaton. By applying it once to a string, he can remove from this string any single character. Bizon Middle knows suffix array well. By applying it once to a string, he can swap any two characters of this string. The guys do not know anything about the suffix tree, but it can help them do much more. </p><p>Bizon the Champion wonders whether the \"Bizons\" can solve the problem. Perhaps, the solution do not require both data structures. Find out whether the guys can solve the problem and if they can, how do they do it? Can they solve it either only with use of suffix automaton or only with use of suffix array or they need both structures? Note that any structure may be used an unlimited number of times, the structures may be used in any order.</p>","ru":"<p>Бизон-Чемпион не только бизон, но и любимец команды «Бизоны».</p><p>На очередном соревновании «Бизонам» попалась следующая задача: «Даны два различных слова (строки из латинских букв) <span class=\"tex-span\"><i>s</i></span> и <span class=\"tex-span\"><i>t</i></span>. Необходимо из слова <span class=\"tex-span\"><i>s</i></span> получить слово <span class=\"tex-span\"><i>t</i></span>». Задача показалась ребятам простой, ведь они хорошо знают суффиксные структуры данных. Бизон Старший любит суффиксный автомат. Применяя его один раз к строке, он может удалить из этой строки любой один символ. Бизон Средний хорошо знает суффиксный массив. Применяя его один раз к строке, он может поменять местами два любых символа в этой строке. Суффиксным деревом ребята не владеют, а с его помощью можно сделать гораздо большее. </p><p>Бизону-Чемпиону интересно, смогут ли «Бизоны» решить задачу. При этом, возможно, для решения задачи не требуются обе структуры данных. Выясните, смогут ли ребята решить задачу и если да, то как: можно ли решить ее только с помощью суффиксного автомата, только с помощью суффиксного массива или потребуются обе структуры? Обратите внимание, что структуры разрешается использовать неограниченное количество раз и в любом порядке.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line contains a non-empty word <span class=\"tex-span\"><i>s</i></span>. The second line contains a non-empty word <span class=\"tex-span\"><i>t</i></span>. Words <span class=\"tex-span\"><i>s</i></span> and <span class=\"tex-span\"><i>t</i></span> are different. Each word consists only of lowercase English letters. Each word contains at most 100 letters.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>В первой строке содержится непустое слово <span class=\"tex-span\"><i>s</i></span>. Во второй строке содержится непустое слово <span class=\"tex-span\"><i>t</i></span>. Слова <span class=\"tex-span\"><i>s</i></span> и <span class=\"tex-span\"><i>t</i></span> различны. Каждое слово состоит только из строчных букв латинского алфавита. Каждое слово содержит не более 100 букв.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>In the single line print the answer to the problem. Print \"<span class=\"tex-font-style-tt\">need tree</span>\" (without the quotes) if word <span class=\"tex-span\"><i>s</i></span> cannot be transformed into word <span class=\"tex-span\"><i>t</i></span> even with use of both suffix array and suffix automaton. Print \"<span class=\"tex-font-style-tt\">automaton</span>\" (without the quotes) if you need only the suffix automaton to solve the problem. Print \"<span class=\"tex-font-style-tt\">array</span>\" (without the quotes) if you need only the suffix array to solve the problem. Print \"<span class=\"tex-font-style-tt\">both</span>\" (without the quotes), if you need both data structures to solve the problem.</p><p>It's guaranteed that if you can solve the problem only with use of suffix array, then it is impossible to solve it only with use of suffix automaton. This is also true for suffix automaton.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>В единственную строку выведите ответ на задачу. Выведите «<span class=\"tex-font-style-tt\">need tree</span>» (без кавычек), если из слова <span class=\"tex-span\"><i>s</i></span> невозможно получить слово <span class=\"tex-span\"><i>t</i></span>, используя суффиксный массив и суффиксный автомат. Выведите «<span class=\"tex-font-style-tt\">automaton</span>» (без кавычек), если для решения задачи достаточно только суффиксного автомата. Выведите «<span class=\"tex-font-style-tt\">array</span>» (без кавычек), если для решения задачи достаточно только суффиксного массива. Выведите «<span class=\"tex-font-style-tt\">both</span>» (без кавычек), если для решения задачи необходимы обе эти структуры данных.</p><p>Гарантируется, что если можно решить задачу только с использованием суффиксного массива, то решить задачу только с использованием суффиксного автомата невозможно. Аналогичное верно и для суффиксного автомата.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>In the third sample you can act like that: first transform \"<span class=\"tex-font-style-tt\">both</span>\" into \"<span class=\"tex-font-style-tt\">oth</span>\" by removing the first character using the suffix automaton and then make two swaps of the string using the suffix array and get \"<span class=\"tex-font-style-tt\">hot</span>\".</p>","ru":"<div class=\"section-title\">Примечание</div><p>В третьем примере можно действовать так: сначала превратить «<span class=\"tex-font-style-tt\">both</span>» в «<span class=\"tex-font-style-tt\">oth</span>», удалив первый символ с помощью суффиксного автомата, а потом сделать два обмена символов получившейся строки с помощью суффиксного массива и получить «<span class=\"tex-font-style-tt\">hot</span>».</p>"},"sampleTestcases":[{"id":1635980819375,"input":"automaton\ntomat","output":"automaton\n","result":{"id":1635980819375,"stdout":"automaton\n","stderr":"","exitcode":0,"signal":null,"time":0,"timeout":false}},{"id":1635980819376,"input":"array\narary\n","output":"array\n","result":{"id":1635980819376,"stdout":"array\n","stderr":"","exitcode":0,"signal":null,"time":1,"timeout":false}},{"id":1635980819377,"input":"both\nhot\n","output":"both\n","result":{"id":1635980819377,"stdout":"both\n","stderr":"","exitcode":0,"signal":null,"time":2,"timeout":false}},{"id":1635980819378,"input":"need\ntree\n","output":"need tree\n","result":{"id":1635980819378,"stdout":"need tree\n","stderr":"","exitcode":0,"signal":null,"time":1,"timeout":false}}],"submitUrl":"https://codeforces.com/group/KIrM1Owd8u/contest/352746/submit","language":"c++","isPartOfContest":true,"langId":"54"}