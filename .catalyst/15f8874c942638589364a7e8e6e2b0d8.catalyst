{"title":{"en":"B. Everything must be Monitored","ru":"B. Everything must be Monitored"},"contestId":"354820","problemIndex":"B","timeLimit":{"en":"2 s.","ru":"2 s."},"memLimit":{"en":"1024 MB","ru":"1024 MB"},"inputFormat":{"en":"standard input","ru":"standard input"},"outputFormat":{"en":"standard output","ru":"standard output"},"problemHtml":{"en":"<p>You're given a tree of $$$n$$$ nodes. The goal is to ensure that the entire tree – including all of its vertices and edges – is <span class=\"tex-font-style-it\">monitored</span>. To do so you place measurement devices (MDs) at a subset of nodes. The MDs induce a cascade of monitoring, as explained below.</p><p>So given a tree with some placement of MDs on the nodes (and no nodes or edges initially monitored), apply the following rules, labeling more and more nodes and edges as monitored, until the rules no longer apply anywhere.</p><ul> <li> A node with an MD is monitored. </li><li> All edges incident to a node with an MD are monitored. </li><li> If an edge is monitored, so are both of its nodes. </li><li> If both nodes at the ends of an edge are monitored, then so is that edge. </li><li> If a node of degree $$$k \\geq 2$$$ is monitored, and $$$k-1$$$ of its edges are monitored, then the last of its edges is also monitored. </li></ul><p>This process, because it is Church-Rosser, is guaranteed to converge to a final and unique state for any tree and any placement of the MDs.</p><p>The goal is to compute the minimum number of MDs that must be placed on the nodes of the tree to ensure that the entire tree (all nodes and edges) is monitored.</p>","ru":"<p>You're given a tree of $$$n$$$ nodes. The goal is to ensure that the entire tree – including all of its vertices and edges – is <span class=\"tex-font-style-it\">monitored</span>. To do so you place measurement devices (MDs) at a subset of nodes. The MDs induce a cascade of monitoring, as explained below.</p><p>So given a tree with some placement of MDs on the nodes (and no nodes or edges initially monitored), apply the following rules, labeling more and more nodes and edges as monitored, until the rules no longer apply anywhere.</p><ul> <li> A node with an MD is monitored. </li><li> All edges incident to a node with an MD are monitored. </li><li> If an edge is monitored, so are both of its nodes. </li><li> If both nodes at the ends of an edge are monitored, then so is that edge. </li><li> If a node of degree $$$k \\geq 2$$$ is monitored, and $$$k-1$$$ of its edges are monitored, then the last of its edges is also monitored. </li></ul><p>This process, because it is Church-Rosser, is guaranteed to converge to a final and unique state for any tree and any placement of the MDs.</p><p>The goal is to compute the minimum number of MDs that must be placed on the nodes of the tree to ensure that the entire tree (all nodes and edges) is monitored.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line of input contains $$$n$$$ ($$$2 \\leq n \\leq 10^5$$$) the number of nodes in the tree. Each of the next $$$n-1$$$ lines contain two numbers $$$a_i$$$ and $$$b_i$$$, the nodes at the ends of an edge of the tree ($$$1 \\leq a_i, b_i \\leq n$$$). These edges are guaranteed to form a tree of nodes $$$1,\\ldots,n$$$.</p>","ru":"<div class=\"section-title\">Input</div><p>The first line of input contains $$$n$$$ ($$$2 \\leq n \\leq 10^5$$$) the number of nodes in the tree. Each of the next $$$n-1$$$ lines contain two numbers $$$a_i$$$ and $$$b_i$$$, the nodes at the ends of an edge of the tree ($$$1 \\leq a_i, b_i \\leq n$$$). These edges are guaranteed to form a tree of nodes $$$1,\\ldots,n$$$.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>Output just one number – the minimum number of measurement devices that must be placed in the tree to ensure that it's fully monitored.</p>","ru":"<div class=\"section-title\">Output</div><p>Output just one number – the minimum number of measurement devices that must be placed in the tree to ensure that it's fully monitored.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>The first example corresponds to the figures below. The nodes with measurement devices are shown in red. The first figure is a configuration where everything is monitored with two measurement devices. In the second figure, the placement of measurement devices is not sufficient to monitor the entire tree.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/f248634d3f8789878905b1ca658f96ddc5c725ac.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> </center>","ru":"<div class=\"section-title\">Note</div><p>The first example corresponds to the figures below. The nodes with measurement devices are shown in red. The first figure is a configuration where everything is monitored with two measurement devices. In the second figure, the placement of measurement devices is not sufficient to monitor the entire tree.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/f248634d3f8789878905b1ca658f96ddc5c725ac.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> </center>"},"sampleTestcases":[{"id":1637193626099,"input":"10\n8 9\n8 10\n1 2\n4 5\n4 6\n6 7\n6 8\n2 4\n2 3\n","output":"2"},{"id":1637193626100,"input":"5\n1 5\n1 4\n1 2\n1 3","output":"1"}],"submitUrl":"https://codeforces.com/group/KIrM1Owd8u/contest/354820/submit","language":"c++","isPartOfContest":true}