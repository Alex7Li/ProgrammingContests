{"title":"E1. Rubik&apos;s Cube Coloring (easy version)","contestId":"1594","problemIndex":"E1","timeLimit":"2 seconds","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p><span class=\"tex-font-style-bf\">It is the easy version of the problem. The difference is that in this version, there are no nodes with already chosen colors.</span></p><p>Theofanis is starving, and he wants to eat his favorite food, sheftalia. However, he should first finish his homework. Can you help him with this problem?</p><p>You have a <span class=\"tex-font-style-it\">perfect</span> binary tree of $$$2^k - 1$$$ nodes&#xA0;&#x2014; a binary tree where all vertices $$$i$$$ from $$$1$$$ to $$$2^{k - 1} - 1$$$ have exactly two children: vertices $$$2i$$$ and $$$2i + 1$$$. Vertices from $$$2^{k - 1}$$$ to $$$2^k - 1$$$ don&apos;t have any children. You want to color its vertices with the $$$6$$$ Rubik&apos;s cube colors (White, Green, Red, Blue, Orange and Yellow).</p><p>Let&apos;s call a coloring <span class=\"tex-font-style-it\">good</span> when all edges connect nodes with colors that are <span class=\"tex-font-style-it\">neighboring</span> sides in the Rubik&apos;s cube.</p><center> <table class=\"tex-tabular\"><tbody><tr><td class=\"tex-tabular-text-align-center\"><img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/81468de2d38e27a371abfa76db5ecd8938d6437a.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"></td><td class=\"tex-tabular-text-align-center\"><img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/acbbacfbb22e480bc2bdcb3e0731504ff698a3f2.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"></td></tr></tbody></table> <span class=\"tex-font-size-small\">A picture of Rubik&apos;s cube and its 2D map.</span> </center><p>More formally: </p><ul> <li> a white node can <span class=\"tex-font-style-bf\">not</span> be neighboring with white and yellow nodes; </li><li> a yellow node can <span class=\"tex-font-style-bf\">not</span> be neighboring with white and yellow nodes; </li><li> a green node can <span class=\"tex-font-style-bf\">not</span> be neighboring with green and blue nodes; </li><li> a blue node can <span class=\"tex-font-style-bf\">not</span> be neighboring with green and blue nodes; </li><li> a red node can <span class=\"tex-font-style-bf\">not</span> be neighboring with red and orange nodes; </li><li> an orange node can <span class=\"tex-font-style-bf\">not</span> be neighboring with red and orange nodes; </li></ul><p>You want to calculate the number of the good colorings of the binary tree. Two colorings are considered different if at least one node is colored with a different color.</p><p>The answer may be too large, so output the answer modulo $$$10^9+7$$$.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first and only line contains the integers $$$k$$$ ($$$1 \\le k \\le 60$$$)&#xA0;&#x2014; the number of levels in the perfect binary tree you need to color.</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>Print one integer&#xA0;&#x2014; the number of the different colorings modulo $$$10^9+7$$$.</p>","noteHtml":"<div class=\"section-title\">Note</div><p>In the picture below, you can see one of the correct colorings of the first example.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/29255450d06878b0589bf051c1f641377b584479.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> </center>","sampleTestcases":[{"id":1633705532453,"input":"3\n","output":"24576\n","result":{"id":1633705532453,"stdout":"24576\n","stderr":"","exitcode":0,"signal":null,"time":1,"timeout":false}},{"id":1633705532454,"input":"14\n","output":"934234\n","result":{"id":1633705532454,"stdout":"934234\n","stderr":"","exitcode":0,"signal":null,"time":1,"timeout":false}}],"submitUrl":"https://codeforces.com/contest/1594/submit","language":"c++","isPartOfContest":true,"langId":"54"}